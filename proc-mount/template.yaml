apiVersion: templates.gatekeeper.sh/v1alpha1
kind: ConstraintTemplate
metadata:
  name: k8spspprocmount
spec:
  crd:
    spec:
      names:
        kind: K8sPSPProcMount
        listKind: K8sPSPProcMountList
        plural: k8spspprocmount
        singular: k8spspprocmount
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          properties:
            procMount:
              type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8spspprocmount

        violation[{"msg": msg, "details": {}}] {
            c := input_containers[_]
            not input_proc_mount_type_allowed(c)
            msg := sprintf("ProcMount type is not allowed, pod: %v. Allowed procMount types: %v", [c.name, input.parameters.procMount])
        }

        input_proc_mount_type_allowed(c) {
            input.parameters.procMount == c.securityContext.procMount
        }

        input_containers[c] {
            c := input.review.object.spec.containers[_]
            has_field(c, "securityContext")
            has_field(c.securityContext, "procMount")
        }

        input_containers[c] {
            c := input.review.object.spec.initContainers[_]
            has_field(c, "securityContext")
            has_field(c.securityContext, "procMount")
        }

        # has_field returns whether an object has a field
        has_field(object, field) = true {
            object[field]
        }